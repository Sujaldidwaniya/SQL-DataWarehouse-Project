/*
==================================================================================
Stored Procedure :Load Silver Layer (Bronze -> Silver)
==================================================================================
Script Purpose:
     This Stored Procedure performs The ETL(Extract,Transform,Load) process to
     Populate the 'Silver' schema tables from the 'Bronze' schema
Action Perdormed:
       -Truncates Silver Tables.
       -Insert Transformed and cleaned data  from bronze to silver tables.

Parameters:
     This stored procedure does not accept any parameters or return any values.

Usage Example:
     EXEC silver.load_silver;

=====================================================================================
*/


CREATE OR ALTER PROCEDURE silver.load_silver as
BEGIN
DECLARE @start_time DATETIME ,@end_time DATETIME,@batch_start_time DATETIME,@batch_end_time DATETIME
	BEGIN TRY
			SET @batch_start_time =GETDATE()
				print'==================================';
				print 'LOADING SILVER TABLES';
				PRINT'==================================';


				PRINT '----------------------------------';
				PRINT 'LOADING CRM TABLES';
				PRINT '----------------------------------';
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.crm_cust_info'
		TRUNCATE TABLE silver.crm_cust_info;
		PRINT '>> INSERT INTO silver.crm_cust_info'
		INSERT INTO silver.crm_cust_info (
			cst_id,
			cst_key,
			cst_firstname,
			cst_lastname,
			cst_marital_status,
			cst_gndr,
			cst_create_date
		)
		select cst_id,
		cst_key,
		trim(cst_firstname) as cst_firstname,
		trim(cst_lastname) as cst_lastname,
		case when Upper(Trim(cst_marital_status)) ='M' THEN 'Married'
			 when Upper(trim(cst_marital_status)) ='S' THEN 'Single'
			 else 'n\a'
		end cst_marital_status,
		case when upper(trim(cst_gndr)) ='M' then 'Male'
			 when upper(trim(cst_gndr)) ='F' then 'Female'
			 else 'n\a'
		end cst_gndr,
		cst_create_date
		from
		(select *,row_number() over(partition by cst_id order by cst_create_date desc) as flag_last
		from bronze.crm_cust_info)t where flag_last=1
		set @end_time=GETDATE() ;
				PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
				PRINT '-------------'




		print '========================================================'
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.crm_prd_info'
		TRUNCATE TABLE silver.crm_prd_info;
		print '>> INSERT INTO silver.crm_prd_info'
		INSERT INTO silver.crm_prd_info(
		prd_id,
		cat_id,
		prd_key,
		prd_nm,
		prd_cost,
		prd_line,
		prd_start_dt,
		prd_end_dt
		)
		select 
		prd_id,
		replace(substring(prd_key,1,5),'-','_') as erp_cust_id,
		substring(prd_key,7,len(prd_key)) as crm_sales_prd_key,
		prd_nm,
		ISNULL(prd_cost,0) as prd_cost,
		CASE WHEN upper(prd_line) ='M' THEN 'Mountain'
			 WHEN UPPER(prd_line) ='R' THEN 'Road'
			 WHEN Upper(prd_line) ='S' THEN 'Other Sales'
			 When Upper(prd_line) ='T' Then 'Touring'
			 Else 'n\a'
		end prd_line,
		prd_start_dt,
		DATEADD(DAY, -1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt
		from bronze.crm_prd_info
		set @end_time=GETDATE() ;
				PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
				PRINT '-------------'





		print '========================================================================='
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.crm_sales_details'
		TRUNCATE TABLE silver.crm_sales_details;
		print'>> INSERT INTO silver.crm_sales_details'
		Insert INTO silver.crm_sales_details(
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,
			sls_order_dt,
			sls_ship_dt,
			sls_due_dt,
			sls_sales,
			sls_quantity,
			sls_price
		)
		select sls_ord_num,
		sls_prd_key,
		sls_cust_id,
		CASE WHEN sls_order_dt =0 or len(sls_order_dt) !=8 then null
			 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
		END sls_order_dt_co,
		CASE WHEN sls_ship_dt =0 or len(sls_ship_dt) !=8 then null
			 ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
		END sls_ship_dt_co,
		CASE WHEN sls_due_dt =0  or len(sls_due_dt) !=8 then null
			 ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
		END sls_due_dt_co,
		CASE WHEN sls_sales is null or sls_sales<=0 or sls_sales!= sls_quantity *ABS(sls_price)
			 THEN sls_quantity * ABS(sls_price)	
			 ELSE sls_sales
		END sls_sales_new,
		sls_quantity,
		Case when sls_price is null or sls_price <=0 
			 THEN sls_sales / NULLIF(sls_quantity,0)
			 ELSE sls_price
		END sls_price_new
		from bronze.crm_sales_details
		set @end_time=GETDATE() ;
			PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
			PRINT '-------------'





		print'=========================================================================='
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.erp_CUST_AZ12'
		TRUNCATE TABLE silver.erp_CUST_AZ12;
		print'>> INSERT INTO silver.erp_CUST_AZ12'
		INSERT INTO silver.erp_CUST_AZ12(
			CID,
			BDATE,
			GEN
		)
		select 
		CASE WHEN CID LIKE 'NAS%' THEN SUBSTRING(CID,4,LEN(CID))
			 ELSE CID
		END AS  CID,

		CASE WHEN BDATE>GETDATE() THEN NULL
			 WHEN BDATE IS NULL THEN 'N\A'
			 ELSE BDATE
		END BDATE,

		CASE WHEN UPPER(TRIM(GEN)) IN ('F','FEMALE') THEN 'Female'
			 WHEN UPPER(TRIM(GEN)) IN ('M','MALE') THEN 'Male'
			 ELSE 'N\A'
		END AS GEN
		from bronze.erp_CUST_AZ12
		set @end_time=GETDATE() ;
			PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
			PRINT '-------------'






		PRINT'========================================================================='
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.erp_LOC_A101'
		TRUNCATE TABLE silver.erp_LOC_A101;
		PRINT'INSERT INTO silver.erp_LOC_A101'
		INSERT INTO silver.erp_LOC_A101 (
			CID,
			CNTRY
		)
		select
		REPLACE(CID,'-','') AS CID,
		CASE WHEN TRIM(CNTRY) ='DA' THEN 'Germany'
			 WHEN TRIM(CNTRY) IN ('US','USA') THEN 'United States'
			 WHEN TRIM(CNTRY) ='' OR CNTRY IS NULL THEN 'n\a'
			 ELSE TRIM(CNTRY)
		END country
		from bronze.erp_LOC_A101
		set @end_time=GETDATE() ;
			PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
			PRINT '-------------'





		PRINT'============================================================================='
		set @start_time=GETDATE();
		PRINT 'Truncatin table :silver.erp_PX_CAT_G1V2'
		TRUNCATE TABLE silver.erp_PX_CAT_G1V2;
		PRINT'>>INSERT INTO silver.erp_PX_CAT_G1V2'

		INSERT INTO silver.erp_PX_CAT_G1V2(
			ID,
			CAT,
			SUBCAT,
			MAINTENANCE
		)
		SELECT 
		ID,
		CAT,
		SUBCAT,
		MAINTENANCE
		FROM bronze.erp_PX_CAT_G1V2
		set @end_time=GETDATE() ;
			PRINT'LOAD DURATION : '+ CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR)+'second'
			PRINT '-------------'





		SET @end_time =GETDATE();
			PRINT 'LOAD DURATION : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS VARCHAR) +'seconds'
			PRINT '------------------'
			SET @batch_end_time =GETDATE()
			PRINT '========================================'
			PRINT 'LOADING BRONZE LAYER COMPLETED'
			PRINT'WHOLE BATCH DURATION :'+ CAST(DATEDIFF(second,@batch_start_time ,@batch_end_time) AS VARCHAR) +'SECONDS'
			PRINT'=========================================='
		END TRY
		BEGIN CATCH
		print '================================'
		print 'ERROR OCCUR DURING LOADING';
		PRINT 'ERROR'+ ERROR_MESSAGE();
		PRINT '================================'
	END CATCH
END
